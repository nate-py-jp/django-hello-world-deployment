"""
Django settings for app1 project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from urllib.parse import urlparse
import newapp
import environ


env = environ.Env(
    DEBUG=(
        bool, False
        )
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.

# Set the project base directory
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

env_file = os.path.join(BASE_DIR, '.env')

if os.path.isfile(env_file):
    
    # get environment variables in development
    env.read_env(env_file)
    print("development env")

elif os.environ.get('GOOGLE_CLOUD_PROJECT', None):
    
    # get environment variables in production
    env.read_env()
    print("production env")
    print("Google cloud project env var:", GOOGLE_CLOUD_PROJECT)

else:
    raise Exception("No .env file or GOOGLE_CLOUD_PROJECT detected. No environment variables found.")

SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')

APPENGINE_URL = env('APPENGINE_URL', default=None)
if APPENGINE_URL:
    if not urlparse(APPENGINE_URL).scheme:
        APPENGINE_URL = f"http://{APPENGINE_URL}"
        ALLOWED_HOSTS = [urlparse(APPENGINE_URL).netloc]

        print("APPENGINE_URL:", APPENGINE_URL)
        
        # not sure if i need(but in the example):

        # CSRF_TRUSTED_ORIGINS = [APPENGINE_URL]
        # SECURE_SSL_REDIRECTS = True

    else:
        ALLOWED_HOSTS = [env('ALLOWED_HOSTS')]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "newapp"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app1.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app1.wsgi.application"


# Databases

if env("GOOGLE_CLOUD_PROJECT", default=None):

    DB_CONNECTION_NAME = env('DB_NAME')
    
    print("DB_CONNECTION_NAME", DB_CONNECTION_NAME)

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "USER": env('DB_USER'),
            "HOST": f'/cloudsql/{DB_CONNECTION_NAME}',
            "PASSWORD": env('DB_PASSWORD'),
            "NAME": env('DB_NAME'),
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "USER": env('DB_USER'),
            "HOST": env('ALLOWED_HOSTS'),
            "PORT": env('DB_PORT'),
            "NAME": env('DB_NAME'),
            "PASSWORD": env('DB_PASSWORD'),
        }
    }
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


STATIC_ROOT = "static"
STATIC_URL = "/static/"
STATICFILES_DIRS = []

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
